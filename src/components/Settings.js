import React from "react";
import base from "./base";
import Loader from "./Loader";
import axios from "axios";

export default class Settings extends React.Component {
	constructor() {
		super();

		this.update_details = this.update_details.bind(this);
		this.fileUpload = this.fileUpload.bind(this);

		this.state = {
			data: {
				hello: "world",
			},
			data_local: {
				users: [],
				hash: [],
			},
			user: {
				username: null,
				name: "",
				email: "",
				branch: "",
				college: "NIT Warangal",
				year: "",
			},
			loaded: false,
			file: null,
			uploaded: false,
		};
	}

	componentWillMount() {
		this.ref = base.syncState(`/user-data`, {
			context: this,
			state: `data`,
			then() {
				console.log("this is the then callback");
				this.setState({
					data_local: this.state.data,
				});
			},
		});
		if (this.props.email) {
			base.fetch(`/user-data/hash/${this.props.email.split("@")[0]}`, {
				asArray: false,
				context: this,
				then(data) {
					if (!data) {
						// this.setState({
						// 	error_404: true,
						// });
						console.log("New User, no existing data");
						this.setState({
							loaded: true,
						});
					}
					// console.log(data);
					if (data) {
						base.fetch(`/user-data/users/${data}`, {
							asArray: false,
							context: this,
							then(response) {
								console.log(response);
								this.setState({
									user: response,
									loaded: true,
								});
							},
						});
					}
				},
			});
		} else {
			this.setState({
				loaded: true,
			});
		}
	}

	update_details(event) {
		event.preventDefault();

		let image_link = "";

		this.fileUpload().then(response => {
			// console.log("actual:", response.data.data.link);
			image_link = response.data.data.link;

			const updated_user = {
				username: this.email.value.split("@")[0],
				name: this.name.value,
				email: this.email.value,
				branch: this.branch.value,
				college: this.college.value,
				year: this.year.value,
				image: image_link,
			};

			let data = { ...this.state.data_local };
			const position = data[`users`].push(updated_user);

			// console.log("pos: ", position);
			const key = `${updated_user.username}`;

			base.post(`/user-data/hash`, {
				data: {
					[key]: position - 1,
				},
				then(done) {
					console.log(done);
				},
			});
			this.setState({
				data: data,
				uploaded: true,
			});
		});
	}

	fileUpload() {
		const url = "https://api.imgur.com/3/image";
		const formData = new FormData();
		formData.append("image", this.uploadInput.files[0]);
		const config = {
			headers: {
				"content-type": "multipart/form-data",
				Authorization:
					"Bearer 0d8b6ced9a30eabaebf9f823f077a91de84b5f02",
				// "Client-ID": "3f651f76a9def53",
			},
		};
		return axios.post(url, formData, config);
	}

	render() {
		return (
			<React.Fragment>
				{this.state.loaded ? (
					<div className="white-text text-center dark-bg">
						<div
							className="row justify-content-center"
							style={{ paddingBottom: "100px" }}
						>
							<h1 className="col-6 josefinSlab">Account Info</h1>
						</div>
						<div className="row justify-content-center">
							<form onSubmit={this.update_details.bind(this)}>
								<div className="col-3">
									{/* <div className="group">
							<img />
						</div> */}

									<div>
										{this.state.user.image ? (
											<img
												src={this.state.user.image}
												width="200px"
												height="200px"
												className="rounded-circle img-fluid"
											/>
										) : null}
										<input
											type="file"
											// onChange={this.onChange()}
											ref={input =>
												(this.uploadInput = input)
											}
										/>
									</div>
									<div className="group">
										<p>Username</p>
										<input
											type="text"
											value={
												this.props.email
													? this.props.email.split(
															"@",
													  )[0]
													: this.state.user.username
														? this.state.user
																.username
														: "< autogenerated >"
											}
											required
											disabled
											style={{ color: "grey" }}
											ref={input =>
												(this.username = input)
											}
										/>
										<span className="highlight" />
										<span className="bar" />
										{/* <label>
									{this.props.email
										? this.props.email.split("@")[0]
										: this.state.user.username
											? this.state.user.username
											: "< autogenerated >"}Username
								</label> */}
									</div>

									<div className="group">
										<input
											type="text"
											defaultValue={this.state.user.name}
											required
											ref={input => (this.name = input)}
										/>
										<span className="highlight" />
										<span className="bar" />
										<label>Name</label>
									</div>

									<div className="group">
										Email
										<input
											type="text"
											defaultValue={
												this.props.email
													? this.props.email
													: this.state.user.email
											}
											required
											disabled
											style={{ color: "grey" }}
											ref={input => (this.email = input)}
										/>
										<span className="highlight" />
										<span className="bar" />
										{/* <label>Email</label> */}
									</div>
									<div className="group">
										<input
											type="text"
											defaultValue={
												this.state.user.branch
											}
											required
											ref={input => (this.branch = input)}
										/>
										<span className="highlight" />
										<span className="bar" />
										<label>Branch</label>
									</div>
									<div className="group">
										<input
											type="text"
											defaultValue={
												this.state.user.college
											}
											required
											ref={input =>
												(this.college = input)
											}
										/>
										<span className="highlight" />
										<span className="bar" />
										<label>College</label>
									</div>
									<div className="group">
										<input
											type="text"
											defaultValue={this.state.user.year}
											required
											ref={input => (this.year = input)}
										/>
										<span className="highlight" />
										<span className="bar" />
										<label>Graduation</label>
									</div>
									{/* <div className="text-center" style={{ width: "100%" }}> */}
									<button
										type="submit"
										className="btn btn-outline-primary"
										// style={{ display: "block", width: "100%" }}
									>
										Save Changes
									</button>
									{this.state.uploaded ? (
										<button
											disabled
											className="btn btn-lg btn-success"
										>
											Success!
										</button>
									) : null}
									{/* <a href="#">Save</a> */}
									{/* </div> */}
								</div>
							</form>
						</div>
					</div>
				) : (
					<Loader message="Loading" />
				)}
			</React.Fragment>
		);
	}
}
